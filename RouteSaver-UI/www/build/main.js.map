{"version":3,"sources":["../../src/app/app.config.ts","../../src/pages/login/login.ts","../../src/pages/home/home.ts","../../src/providers/route-service/route-service.ts","../../src/pages/register/register.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/app.component.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/models/Route.ts","../../src/providers/auth-service/auth-service.ts","../../src/providers/token-service/token-service.ts","../../src/models/Point.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n    public readonly apiUrl = 'http://route.saver';\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.config.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service'\r\nimport { RegisterPage } from '../register/register'\r\nimport { HomePage } from '../home/home'\r\n\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n  registerCredentials = { email: '', password: '' };\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public authservice: AuthServiceProvider) {\r\n  }\r\n\r\n  login(): void {\r\n     this.authservice.login(this.registerCredentials.email, this.registerCredentials.password)\r\n     .subscribe(data => {\r\n      let user = data.json();\r\n      if (user && user.token) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n          this.navCtrl.push(HomePage);\r\n      }\r\n  }, error => {\r\n      console.log(\"Oooops!\");\r\n  })\r\n  }\r\n\r\n  createAccount(): void{\r\n    this.navCtrl.push(RegisterPage);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\nimport { RouteService } from '../../providers/route-service/route-service';\nimport { LoginPage } from '../login/login';\n\nimport { ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\nimport { Point } from '../../models/Point'\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage implements OnInit {\n\n  constructor(public navCtrl: NavController, public AuthServiceProvider: AuthServiceProvider,\n    private mapsAPILoader: MapsAPILoader, public RouteService: RouteService) {\n\n  }\n\n  public middlePoints:Array<Point>;\n  public middlePointsRef:Array<HTMLInputElement>;\n  public routeName: string;\n\n  @ViewChild(\"startPointRef\")\n  public startPointRef: ElementRef;\n\n  @ViewChild(\"endPointRef\")\n  public endPointRef: ElementRef;\n\n  ionViewCanEnter() {\n     if(!this.AuthServiceProvider.authenticated()){\n       console.log(\"inside\");\n        this.navCtrl.push(LoginPage);\n     }\n  }\n\n  ngOnInit() {\n    this.middlePoints = new Array<Point>();\n    this.middlePointsRef = new Array<HTMLInputElement>();\n    //load Places Autocomplete\n    this.mapsAPILoader.load().then(() => {\n       new google.maps.places.Autocomplete(this.startPointRef.nativeElement, {\n        types: [\"(cities)\"]\n      });\n    });\n\n    this.mapsAPILoader.load().then(() => {\n      new google.maps.places.Autocomplete(this.endPointRef.nativeElement, {\n        types: [\"(cities)\"]\n      });\n    });\n  }\n\n  public AddMiddlePoint():void{\n    let newPointID = this.middlePoints.length + 1;\n    this.middlePoints.push(new Point(newPointID, \"\"));\n    let tempArray = this.middlePointsRef;\n    setTimeout(function(){\n      let newSearchElem = document.getElementById(newPointID.toString());\n      let inputElem = <HTMLInputElement>newSearchElem;\n      tempArray.push(inputElem);\n      new google.maps.places.Autocomplete(inputElem, {\n        types: [\"(cities)\"]\n      });\n    }, 500) \n\n    this.middlePointsRef = tempArray;\n  }\n\n  public SaveRoute():void{\n    let start = this.startPointRef.nativeElement.value;\n    let end = this.endPointRef.nativeElement.value;\n\n    let tempArray = new Array<string>();\n    for(let i = 0; i< this.middlePointsRef.length; i++){\n      tempArray.push(this.middlePointsRef[i].value);\n    }\n    \n    this.RouteService.SaveRoute(this.routeName, start, end, tempArray);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { AppConfig } from '../../app/app.config';\r\nimport { Route } from '../../models/Route';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from '../token-service/token-service'\r\n\r\n\r\n@Injectable()\r\nexport class RouteService {\r\n    constructor(private http: Http, private config: AppConfig, private tokenService: TokenService) {\r\n    }\r\n\r\n    SaveRoute(RouteName:string, FirstPoint : string, LastPoint : string, MiddlePoints : Array<string>){\r\n        this.http.post(this.config.apiUrl + '/route/create', \r\n        {\r\n            FirstPoint : FirstPoint,\r\n            LastPoint : LastPoint,\r\n            MiddlePoints : MiddlePoints,\r\n            RouteName : RouteName\r\n        }, this.tokenService.GetToken()).subscribe(data => { window.location.reload(); }, error => {})\r\n    }\r\n\r\n    GetAllRoutes(): Observable<Response> {\r\n        return Observable.from(this.http.get(this.config.apiUrl + '/route/get-all-routes', this.tokenService.GetToken()));\r\n    }\r\n\r\n    GetRouteById(id : Number) : Route{\r\n        let route = new Route;\r\n        this.http.get(this.config.apiUrl + '/route/get-route-by-id?Id='+ id, this.tokenService.GetToken()).subscribe(data =>{\r\n            route = <Route>data.json();\r\n        });\r\n\r\n        return route;\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/route-service/route-service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service'\nimport { LoginPage } from '../login/login'\n\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n  registerCredentials = { email: '', password: '' };\n  constructor(public navCtrl: NavController, public navParams: NavParams, public authservice: AuthServiceProvider) {\n  }\n\n  register():void{\n    this.authservice.register(this.registerCredentials.email, this.registerCredentials.password)\n    .subscribe(data => {\n      this.navCtrl.push(LoginPage);\n    }, error => {\n      console.log(\"Error register\");\n    });\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 157;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 157\n// module chunks = 1","var map = {\n\t\"../pages/register/register.module\": [\n\t\t603,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 200;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 200\n// module chunks = 1","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { AuthServiceProvider } from '../providers/auth-service/auth-service';\nimport { RouteService } from '../providers/route-service/route-service';\n\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\nimport { ListPage } from '../pages/list/list';\nimport { Route } from '../models/Route';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp implements OnInit  {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  routes: Array<Route>;\n\n  constructor(public platform: Platform,\n     public statusBar: StatusBar,\n      public splashScreen: SplashScreen,\n       public AuthServiceProvider: AuthServiceProvider,\n      public RouteService : RouteService) {\n      this.initializeApp();\n\n    \n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  ngOnInit() {\n    // used for an example of ngFor and navigation\n    this.RouteService.GetAllRoutes().subscribe(data => {\n      this.routes = <Array<Route>>data.json();\n    });\n}\n\n  openPage(route) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(ListPage, route);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { MyApp } from '../../app/app.component'\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  routeName: any;\n  RoutePoints : Array<string>;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.routeName = navParams.get('routeName');\n    this.RoutePoints = navParams.get('routePoints');  \n  }\n\n  BackToMain() {\n    this.navCtrl.setRoot(MyApp);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { HttpModule} from '@angular/http';\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { ListPage } from '../pages/list/list';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { RegisterPage } from '../pages/register/register';\r\n\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { AuthServiceProvider } from '../providers/auth-service/auth-service';\r\nimport { RouteService } from '../providers/route-service/route-service';\r\nimport { TokenService } from '../providers/token-service/token-service';\r\n\r\nimport { AppConfig } from './app.config';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    ListPage,\r\n    LoginPage,\r\n    RegisterPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    IonicModule.forRoot(MyApp),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: \"AIzaSyBugYBTS1HH3RIZ9R4sbZDs7oVZfRuUONs\",\r\n      libraries: [\"places\"]\r\n    }),\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    ListPage,\r\n    LoginPage,\r\n    RegisterPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    AuthServiceProvider,\r\n    RouteService,\r\n    TokenService,\r\n    AppConfig\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\r\nexport class Route{\r\n    public Id : Number;\r\n    public RouteName : string;\r\n    public RoutePoints : Array<string>;\r\n    constructor(){\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Route.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {NavController, App} from \"ionic-angular/index\";\n\nimport { AppConfig } from '../../app/app.config';\nimport { LoginPage } from '../../pages/login/login';\n\n/*\n  Generated class for the AuthServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class AuthServiceProvider {\n\n  constructor(public http: Http, public config: AppConfig) {\n  }\n\n  // Login a user\n  // Normally make a server request and store\n  // e.g. the auth token\n  login(username: string, password: string) {\n\n   return this.http.post(this.config.apiUrl + '/auth/login', { username: username, password: password });\n    \n  }\n\n  // Logout a user, destroy token and remove\n  // every information related to a user\n  register(username: string, password: string) {\n    return this.http.post(this.config.apiUrl + '/auth/register', { username: username, password: password });\n  }\n \n  // Returns whether the user is currently authenticated\n  // Could check if current token is still valid\n  authenticated(): boolean {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service/auth-service.ts","import { Injectable } from '@angular/core';\r\nimport { RequestOptions, Headers } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n\r\npublic GetToken() {\r\n    // create authorization header with jwt token\r\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (currentUser && currentUser.token) {\r\n        let headers = new Headers({ 'Authorization': 'Bearer ' + currentUser.token });\r\n        return new RequestOptions({ headers: headers });\r\n    }\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/token-service/token-service.ts","export class Point{\r\n    public Id : Number;\r\n    public Name : string;\r\n    constructor(Id:Number, Name : string){\r\n      this.Id = Id;\r\n      this.Name = Name;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/Point.ts"],"sourceRoot":""}